version: '3.8'

services:

  db:
    container_name: db
    restart: always
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: project_db
      PGDATA: /pg-data
      PG_SHARED_PRELOAD_LIBRARIES: pg_stat_statements
    volumes:
      - pg-data:/pg-data
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    container_name: redis
    restart: always
    image: redis:6-alpine 
    expose:
      - 6379
    volumes:
      - redis-data:/data      

  backend:
    container_name: project-backend
    restart: always
    build: .
    volumes:
      - .:/app/
      - ./static/:/backend/static
    command: sh -c "python3 manage.py migrate &&
             python3 manage.py collectstatic --noinput &&
             python3 -m gunicorn --bind 0.0.0.0:9999 project.asgi:application -k uvicorn.workers.UvicornWorker"
    env_file:
      - ./project/.env
    ports:
      - "9999:9999"
    depends_on:
      db:
        condition: service_healthy

  celery:
    container_name: celery-beat
    restart: always
    build:
      context: .
    command: celery -A project worker --beat --scheduler django --loglevel=info
    env_file:
      - ./project/.env
    depends_on:
      - db
      - redis
      - backend

  flower:
    container_name: flower
    restart: always
    build:
      context: .
    command: celery -A project flower
    env_file:
      - ./project/.env
    ports:
      - "5555:5555"      
    depends_on:
      - db
      - redis
      - backend
      - celery

volumes:
    pg-data:
    redis-data:

networks:
  default:
    driver: bridge